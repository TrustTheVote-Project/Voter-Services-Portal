require 'sidekiq/capistrano'

# Location configuration
set :domain,      "server.com"                    # Domain name or IP address of the server
set :user,        "deploy"                        # Unix user to own the deployment
set :runner,      "deploy"                        # Same as :user
set :deploy_to,   "/home/deploy/va-portal"        # Path to the deployment directory

# Common configuration
set :application, "va-portal"
set :repository,  "git://github.com/trustthevote/Virginia-Voter-Services-Portal.git"
set :branch,      "v2"
set :rails_env,   "production"

role :web, domain
role :app, domain
role :db,  domain, :primary => true

set :use_sudo,              false
set :scm,                   :git
set :deploy_via,            :export
set :rake,                  "bundle exec rake"
set :whenever_command,      "bundle exec whenever"
set :whenever_environment,  "production"

set :default_shell, "/bin/bash"
ssh_options[:user] = "deploy"
ssh_options[:keys] = [ "~/.ssh/osdv-aws.pem" ]
default_run_options[:pty] = true

set :default_environment, {
  BASH_ENV: '~/.bashrc.cap'
}

# Create uploads directory and link
namespace :deploy do
  task :shared, :roles => :app do
    run "cp #{shared_path}/config/database.yml #{latest_release}/config/database.yml"
    run "cp #{shared_path}/config/config.yml #{latest_release}/config/config.yml"
  end
end

namespace :db do
  task :seed, :roles => :app do
    run "cd #{latest_release} && RAILS_ENV=#{rails_env} bundle exec rake db:seed"
  end
end

# Passenger tasks
namespace :deploy do
  task :start do ; end
  task :stop do ; end

  task :restart, :roles => :app, :except => { :no_release => true } do
    run "#{try_sudo} touch #{File.join(current_path, 'tmp', 'restart.txt')}"
  end
end

namespace :va do
  task :reload_offices, :roles => :app do
    run "cd #{latest_release} && RAILS_ENV=#{rails_env} bundle exec rake va:reload_offices"
  end
end

after  "deploy:finalize_update", "deploy:shared"
before "deploy:restart", "va:reload_offices"
after  "deploy:restart", "deploy:cleanup"

require 'bundler/capistrano'
require 'whenever/capistrano'
