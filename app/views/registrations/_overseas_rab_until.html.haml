- if AppConfig['enable_uocava_end_date_choice']
  .row
    .span3
      = f.hidden_field :absentee_until
      #absentee_until.sliderbar
    .span3
      .absentee_until_label{ 'data-bind' => 'text: absenteeUntilFormatted' }
- else
  = f.hidden_field :absentee_until

.row
  .span10.indented.overseas_outside_type
    .radio
      = f.radio_button :outside_type, 'ActiveDutyMerchantMarineOrArmedForces', { 'data-bind' => 'checkedWithInit: outsideType' }
      %label{ for: 'registration_outside_type_activedutymerchantmarineorarmedforces' }= t 'outside_type.ActiveDutyMerchantMarineOrArmedForces'
    .radio
      = f.radio_button :outside_type, 'SpouseOrDependentActiveDutyMerchantMarineOrArmedForces', { 'data-bind' => 'checkedWithInit: outsideType' }
      %label{ for: 'registration_outside_type_spouseordependentactivedutymerchantmarineorarmedforces' }= t 'outside_type.SpouseOrDependentActiveDutyMerchantMarineOrArmedForces'
    .radio
      = f.radio_button :outside_type, 'TemporaryResideOutside', { 'data-bind' => 'checkedWithInit: outsideType' }
      %label{ for: 'registration_outside_type_temporaryresideoutside' }= t 'outside_type.TemporaryResideOutside'
    .radio
      = f.radio_button :outside_type, 'TemporaryResideOutsideSpouse', { 'data-bind' => 'checkedWithInit: outsideType' }
      %label{ for: 'registration_outside_type_temporaryresideoutsidespouse' }= t 'outside_type.TemporaryResideOutsideSpouse'

<!-- ko if: needsServiceDetails -->
.row
  .span2
    %span= t 'options.rab_until.service_branch'
    = select     :registration, :service_branch, options_for_select(Registration::SERVICE_BRANCHES), {}, autocomplete: ac, class: 'span2 inline', 'data-bind' => 'valueWithInit: serviceBranch'
  .span2
    %span= t 'options.rab_until.service_id'
    = text_field :registration, :service_id, placeholder: 'Service ID', autocomplete: ac, class: 'span1 inline', 'data-bind' => 'valueWithInit: serviceId, valueUpdate: "afterkeyup"'
  .span2
    %span= t 'options.rab_until.rank'
    = text_field :registration, :rank, placeholder: 'Rank / Grade / Rate', autocomplete: ac, class: 'span2 inline', 'data-bind' => 'valueWithInit: rank, valueUpdate: "afterkeyup"'
<!-- /ko -->

- if AppConfig['collect_absentee_party_preference_only_absentee']
  = render partial: 'registrations/party_preference', locals: { f: f, indented: true }
