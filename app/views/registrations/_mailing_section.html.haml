- updating ||= false

#mailing.section{ 'data-bind' => 'vis: page() == "address"' }

  %div{ 'data-bind' => 'visible: domestic() && maIsDifferent()' }
    .head
      %h3 Mailing address
    = render partial: 'mailing_domestic', locals: { f: f }

  = render partial: 'mailing_overseas', locals: { f: f }

  .previous_registration
    .head
      %h3 Previous Voter Registration Information

    - if updating
      %p= I18n.t("previous_registration.header")
      = f.hidden_field :pr_status
      .radio
        = f.radio_button :pr_status, '0', { 'data-bind' => 'checkedWithInit: prStatus', disabled: true }
        %label{ for: 'registration_pr_status_0' }= I18n.t("previous_registration.update.no_answer")
      .radio
        = f.radio_button :pr_status, '1', { 'data-bind' => 'checkedWithInit: prStatus', disabled: true }
        %label{ for: 'registration_pr_status_1' }= I18n.t("previous_registration.update.yes_answer")
    - else
      .radio
        = f.radio_button :pr_status, '0', { 'data-bind' => 'checkedWithInit: prStatus' }
        %label{ for: 'registration_pr_status_0' }= I18n.t("previous_registration.new.no_answer")
      .radio
        = f.radio_button :pr_status, '1', { 'data-bind' => 'checkedWithInit: prStatus' }
        %label{ for: 'registration_pr_status_1' }= I18n.t("previous_registration.new.yes_answer")

    <!-- ko if: prStatus() == "1" -->
    .row.personal-info
      .span3
        = f.label :pr_first_name, "First name"
        = f.text_field :pr_first_name, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "prFirstName" }, valueUpdate: "afterkeyup"'
      .span3
        = f.label :pr_middle_name do
          Full middle
          %span (optional)
        = f.text_field :pr_middle_name, autocomplete: ac, 'data-bind' => 'valueWithInit: prMiddleName'
      .span3
        = f.label :pr_last_name, "Last name"
        = f.text_field :pr_last_name, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "prLastName" }, valueUpdate: "afterkeyup"'
      .span2
        = f.label :pr_suffix do
          Suffix
          %span (optional)
        = f.select :pr_suffix, Dictionaries::NAME_SUFFIXES, { include_blank: true }, { autocomplete: ac, class: 'span1', 'data-bind' => 'value: prSuffix' }
    .row
      .span12
        .checkbox
          = f.check_box :pr_is_rural, { 'data-bind' => 'checkedWithInit: prIsRural' }
          = f.label :pr_is_rural, I18n.t('rural')
    .row
      .span3
        .address-field
          %label{ for: 'registration_pr_address' } Address
          = f.text_field :pr_address, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "prAddress1" }, valueUpdate: "afterkeyup"'
        .address-field
          = f.text_field :pr_address_2, autocomplete: ac, 'data-bind' => 'valueWithInit: prAddress2, valueUpdate: "afterkeyup"'
    .row
      .span3
        = f.label :pr_city, "City"
        = f.text_field :pr_city, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "prCity" }, valueUpdate: "afterkeyup"'
      .span2.state-field
        = f.label :pr_state, "State"
        = f.select :pr_state, Dictionaries::STATES, { include_blank: true }, { autocomplete: ac, class: 'span3', 'data-bind' => 'instantValidation: { accessor: "prState" }' }
      .span3.zip-field
        = f.label :pr_zip5, "Zip code"
        = f.text_field :pr_zip5, class: 'first-zip', autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "prZip5", validation: "zip5" }, valueUpdate: "afterkeyup"', placeholder: 'NNNNN', maxlength: 5
        .space &mdash;
        = f.text_field :pr_zip4, class: 'second-zip', autocomplete: ac, placeholder: 'NNNN', maxlength: 4, 'data-bind' => 'valueWithInit: prZip4, valueUpdate: "afterkeyup"'


    .partition
      .row
        .span12
          .checkbox
            = f.check_box :pr_cancel, 'data-bind' => 'instantValidation: { accessor: "prCancel" }'
            = f.label :pr_cancel do
              %strong I authorize cancellation of my existing registration.

    <!-- /ko -->

  .form-actions
    = button_tag 'Next &rarr;'.html_safe, class: 'next btn', 'data-bind' => 'click: nextFromAddress, css: { disabled: addressesInvalid }'
    = button_tag '&larr; Back'.html_safe, class: 'back btn', 'data-bind' => 'click: prevPage'
