#mailing.section{ 'data-bind' => 'vis: page() == "address"' }

  = render partial: 'mailing_domestic', locals: { f: f }
  = render partial: 'mailing_overseas', locals: { f: f }

  .previous_registration
    .head
      %h3 Previous Voter Registration Information

    <!-- ko if: domestic -->
    .radio
      = f.radio_button :pr_status, '0', { 'data-bind' => 'checkedWithInit: prStatus' }
      %label{ for: 'registration_pr_status_0' } I am not currently registered to vote in Virginia or another state
    .radio
      = f.radio_button :pr_status, '2', { 'data-bind' => 'checkedWithInit: prStatus' }
      %label{ for: 'registration_pr_status_2' } I am currently registered to vote at another address in Virginia
    .radio
      = f.radio_button :pr_status, '1', { 'data-bind' => 'checkedWithInit: prStatus' }
      %label{ for: 'registration_pr_status_1' } I am currently registered to vote in another state
    <!-- /ko -->
    <!-- ko if: overseas -->
    %p Are you currently registered to vote at another address in Virginia or in another state?
    .radio
      = f.radio_button :pr_status, '0', { 'data-bind' => 'checkedWithInit: prStatus' }
      %label{ for: 'registration_pr_status_0' } No
    .radio
      = f.radio_button :pr_status, '1', { 'data-bind' => 'checkedWithInit: prStatus' }
      %label{ for: 'registration_pr_status_1' } Yes
    <!-- /ko -->

    <!-- ko if: prStatus() == "1" -->
    <!-- ko ifnot: erIsRural -->
    .row
      .span2
        = f.label :pr_street_number, "Street number"
        = f.text_field :pr_street_number, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "erStreetNumber" }', class: 'span2'
      .span4
        = f.label :pr_street_name, "Street name"
        = f.text_field :pr_street_name, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "erStreetName" }', class: 'span4'
      .span2.street-type-field
        = f.label :pr_street_type, "Street type"
        = f.select :pr_street_type, Dictionaries::STREET_TYPES, { include_blank: true }, { autocomplete: ac, class: 'street-type', 'data-bind' => 'instantValidation: { accessor: "erStreetType" }' }
      .span2.lot-field
        = f.label :pr_apt do
          Apt/Lot
          %span (optional)
        = f.text_field :pr_apt, autocomplete: ac, 'data-bind' => 'valueWithInit: erApt'
    .row
      .span3
        = f.label :pr_city, "City"
        = f.text_field :pr_city, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "erCity" }'
      .span2.state-field
        = f.label :pr_state, "State"
        = f.select :pr_state, Dictionaries::STATES_WITHOUT_VA, { include_blank: true }, { autocomplete: ac, class: 'span3', 'data-bind' => 'instantValidation: { accessor: "erState" }' }
      .span3.zip-field
        = f.label :pr_zip5, "Zip code"
        = f.text_field :pr_zip5, class: 'first-zip', autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "erZip5", validation: "zip5" }', placeholder: 'NNNNN', maxlength: 5
        .space &mdash;
        = f.text_field :pr_zip4, class: 'second-zip', autocomplete: ac, placeholder: 'NNNN', maxlength: 4, 'data-bind' => 'valueWithInit: erZip4'
    <!-- /ko --> <!-- !erIsRural -->

    .row
      .span12
        .checkbox
          = f.check_box :pr_is_rural, { 'data-bind' => 'checkedWithInit: erIsRural' }
          Rural address or homeless? Please check the box and describe where you reside.
        <!-- ko if: erIsRural -->
        = f.text_area :pr_rural, cols: "10", rows: "10", autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "erRural" }'
        <!-- /ko -->

    .partition
      .row
        .span12
          .checkbox
            = f.check_box :pr_cancel, 'data-bind' => 'instantValidation: { accessor: "prCancel" }'
            = f.label :pr_cancel do
              %strong I authorize cancellation of my existing registration.

    <!-- /ko -->

  .form-actions
    = button_tag 'Next &rarr;'.html_safe, class: 'next btn', 'data-bind' => 'click: nextFromAddress, css: { disabled: addressesInvalid }'
    = button_tag '&larr; Back'.html_safe, class: 'back btn', 'data-bind' => 'click: prevPage'
