<!-- ko if: domestic -->
.partition
  .row
    .span12
      .checkbox
        - if updating && changing_status_to_domestic_absentee?
          = f.hidden_field :requesting_absentee, 'data-bind' => 'valueWithInit: requestingAbsentee'
        - else
          - f.object.requesting_absentee = '0'
          = f.check_box :requesting_absentee, { 'data-bind' => 'checkedWithInit: requestingAbsentee' }
        %label{ for: 'registration_requesting_absentee' }
          %strong I am not able to go to the polls on election day and would like an Absentee Ballot Application.
      <!-- ko if: requestingAbsentee -->
      %p To apply to vote absentee, you must identify the election for which you are applying.
      <!-- /ko -->
  <!-- ko if: requestingAbsentee -->
  .row
    .span12
      %h4
        %label{ for: 'registration_rab_election' }
          %strong I am applying to vote absentee for
      = f.select :rab_election, Dictionaries::ELECTIONS.merge('other' => 'Other').invert, { include_blank: true }, { class: 'span6', 'data-bind' => 'valueWithInit: rabElection' }
  <!-- ko if: rabElection() == 'other' -->
  .row
    .span6.election-name-field
      %label{ for: 'registration_rab_election_name' } Election name
      = f.text_field :rab_election_name, 'data-bind' => 'valueWithInit: rabElectionName'
    .span3
      %label{ for: 'registration_rab_election_date' } Held on
      = f.text_field :rab_election_date, 'data-bind' => 'valueWithInit: rabElectionDate', placeholder: 'MM/DD/YYYY'
  <!-- /ko -->
  <!-- /ko -->

<!-- ko if: requestingAbsentee -->
.partition
  .row
    .span12
      %p
        Select only one reason to vote absentee from the list below and include any
        %br/
        required information to support the reason.
  .row
    .span12
      %label{ for: 'registration_ab_reason' } I am unable to go to the polls on election day because
      = f.select :ab_reason, Dictionaries::ABSENCE_REASONS.invert, { include_blank: true }, { class: 'span10', 'data-bind' => 'valueWithInit: abReason' }

  -# Fields to blank elements of the record that aren't on the form
  = hidden_field_tag "registration[ab_field_1]", ''
  = hidden_field_tag "registration[ab_field_2]", ''
  = hidden_field_tag "registration[ab_time_1(1i)]", ''
  = hidden_field_tag "registration[ab_time_1(2i)]", ''
  = hidden_field_tag "registration[ab_time_1(3i)]", ''
  = hidden_field_tag "registration[ab_time_1(4i)]", ''
  = hidden_field_tag "registration[ab_time_1(5i)]", ''
  = hidden_field_tag "registration[ab_time_2(1i)]", ''
  = hidden_field_tag "registration[ab_time_2(2i)]", ''
  = hidden_field_tag "registration[ab_time_2(3i)]", ''
  = hidden_field_tag "registration[ab_time_2(4i)]", ''
  = hidden_field_tag "registration[ab_time_2(5i)]", ''
  = hidden_field_tag "registration[ab_street_number]", ''
  = hidden_field_tag "registration[ab_street_name]", ''
  = hidden_field_tag "registration[ab_street_type]", ''
  = hidden_field_tag "registration[ab_apt]", ''
  = hidden_field_tag "registration[ab_city]", ''
  = hidden_field_tag "registration[ab_state]", ''
  = hidden_field_tag "registration[ab_zip5]", ''
  = hidden_field_tag "registration[ab_zip4]", ''
  = hidden_field_tag "registration[ab_country]", ''

  <!-- ko if: abField1Required || abField2Required -->
  .row
    .span3
      %label{ for: 'registration_ab_field_1', 'data-bind' => 'html: abField1Label' }
      <!-- ko if: abPartyLookupRequired -->
      = f.select :ab_field_1, Dictionaries::PARTIES, { include_blank: true }, 'data-bind' => 'valueWithInit: abField1'
      <!-- /ko -->

      <!-- ko if: !abPartyLookupRequired() -->
      = f.text_field :ab_field_1, 'data-bind' => 'valueWithInit: abField1'
      <!-- /ko -->

    <!-- ko if: abTimeRangeRequired -->
    .span3
      %label{ for: 'registration_ab_time_1_4i_' } Time start
      = bound_time f, :ab_time_1
    .span3
      %label{ for: 'registration_ab_time_2_4i_' } Time end
      = bound_time f, :ab_time_2
    <!-- /ko --> <!-- time range -->

    <!-- ko if: abField2Required -->
    .span3
      %label{ for: 'registration_ab_field_2' } 'data-bind' => 'html: abField2Label' }
      = f.text_field :ab_field_2, 'data-bind' => 'valueWithInit: abField2'
    <!-- /ko -->
  <!-- /ko --> <!-- 1C -->

  <!-- ko if: abAddressRequired -->
  .row
    .span3
      %label{ for: 'registration_ab_street_number' } Street number
      = f.text_field :ab_street_number, 'data-bind' => 'valueWithInit: abStreetNumber'
    .span3
      %label{ for: 'registration_ab_street_name' } Street name
      = f.text_field :ab_street_name, 'data-bind' => 'valueWithInit: abStreetName'
    .span2.street-type-field
      %label{ for: 'registration_ab_street_type' } Street type
      = f.select :ab_street_type, Dictionaries::STREET_TYPES, { include_blank: true }, { class: 'span1', 'data-bind' => 'valueWithInit: abStreetType' }
    .span2.lot-field
      %label{ for: 'registration_ab_apt' }
        Apt/Lot
        %label (optional)
      = f.text_field :ab_apt
  .row
    .span3
      %label{ for: 'registration_ab_city' } City
      = f.text_field :ab_city, 'data-bind' => 'valueWithInit: abCity'
    .span3
      %label{ for: 'registration_ab_state' } Province or State
      = f.text_field :ab_state, 'data-bind' => 'valueWithInit: abState'
    .span3.postal-code-field
      %label{ for: 'registration_ab_zip5' } Postal code
      = f.text_field :ab_zip5, class: 'first-zip', 'data-bind' => 'valueWithInit: abZip5', placeholder: '12345'
      .space &mdash;
      = f.text_field :ab_zip4, class: 'second-zip', placeholder: '1234'
    .span2.country-field
      %label{ for: 'registration_ab_country' } Country
      = f.text_field :ab_country, 'data-bind' => 'valueWithInit: abCountry'
  <!-- /ko --> <!-- addressRequired -->
<!-- /ko -->
<!-- /ko --> <!-- domestic -->
