#address.section{ 'data-bind' => "vis: page() == 'address'" }
  .head
    %h3 #{I18n.t('residence_address')}
    .description
      #{I18n.t('residence_address').capitalize} is your Home address in Virginia or your most recent Virginia residence.

  .row
    .span10
      .checkbox
        = f.check_box :vvr_is_rural
        = f.label :vvr_is_rural, I18n.t('rural')
      <!-- ko if: paperlessSubmission -->
      <br/>
      #{I18n.t("dmv.address_info")}
      <!-- /ko -->

  .row
    .span10
      .address-field
        = f.label :vvr_address_1, I18n.t('addresses.address')
        = f.text_field :vvr_address_1, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "vvrAddress1" }, valueUpdate: "afterkeyup"'
      .address-field
        = f.label :vvr_address_2 do
          = I18n.t('addresses.address_2')
          %span= I18n.t('optional')
        = f.text_field :vvr_address_2, autocomplete: ac, 'data-bind' => 'valueWithInit: vvrAddress2'
  .row
    .span3.town
      = f.label :vvr_town, I18n.t('addresses.city_town')
      = f.text_field :vvr_town, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "vvrTown" }, valueUpdate: "afterkeyup"'
    .span2.state-field.short
      %span= I18n.t('addresses.state')
      = text_field_tag "state", "VA", disabled: true, class: 'span1'
      = f.hidden_field :vvr_state, autocomplete: ac, 'data-bind' => 'value: vvrState'
    .span3.zip-field
      %table
        %tr
          %td= f.label :vvr_zip5, I18n.t('addresses.zip5')
          %td &nbsp;
          %td= f.label :vvr_zip4, I18n.t('addresses.zip4')
        %tr
          %td= f.text_field :vvr_zip5, maxlength: 5, autocomplete: ac, class: 'first-zip', 'data-bind' => 'instantValidation: { accessor: "vvrZip5", validation: "zip5" }, valueUpdate: "afterkeyup"', placeholder: 'NNNNN'
          %td.space &mdash;
          %td= f.text_field :vvr_zip4, maxlength: 4, autocomplete: ac, class: 'second-zip', 'data-bind' => 'valueWithInit: vvrZip4, valueUpdate: "afterkeyup"', placeholder: 'NNNN'
  .row
    .span3
      = f.label :vvr_county_or_city, I18n.t('addresses.county_or_city')
      = f.select :vvr_county_or_city, Office.localities, { include_blank: true }, { autocomplete: ac, class: 'span3', 'data-bind' => 'instantValidation: { accessor: "vvrCountyOrCity" }' }

  <!-- ko if: domestic() && !isConfidentialAddress() -->
  .row
    .span10
      .checkbox
        = f.check_box :ma_is_different, 'data-bind' => 'checkedWithInit: maIsDifferent'
        = f.label :ma_is_different, I18n.t("mailing_address.different.#{AppConfig['domestic_voter_mailing_address_limit'] ? 'limit' : 'no_limit'}", address: I18n.t('residence_address').downcase)
  <!-- /ko --> <!-- domestic -->

  <!-- ko if: overseas -->
  .row
    .span12
      .radio
        = radio_button :registration, :vvr_uocava_residence_available, '1', { autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "vvrOverseasRA" }' }
        %label{ for: 'registration_vvr_uocava_residence_available_1' } My Virginia residence is still available to me
      .radio
        = radio_button :registration, :vvr_uocava_residence_available, '0', { autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "vvrOverseasRA" }' }
        %label{ for: 'registration vvr_uocava_residence_available_0' } My Virginia residence is no longer available to me
  <!-- ko if: vvrOverseasRA() == '0' -->
  .row
    .span12
      %span My last date of residence at the above address was:
      = bound_date f, :vvr_uocava_residence_unavailable_since, { end_year: Date.today.year }, class: 'date'
  <!-- /ko -->
  <!-- /ko --> <!-- overseas -->
