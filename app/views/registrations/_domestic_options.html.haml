<!-- ko if: domestic -->
.partition
  .row
    .span12
      .checkbox
        = f.check_box :need_assistance, 'data-bind' => 'checked: needsAssistance'
        = f.label :need_assistance do
          %strong= I18n.t('options.domestic.need_assistance')

.partition
  .row
    .span12
      .checkbox
        = f.check_box :be_official, autocomplete: ac, 'data-bind' => 'checked: beOfficial'
        = f.label :be_official do
          %strong= I18n.t('options.being_official')

.partition
  .row
    .span12
      .checkbox
        = f.check_box :requesting_absentee, 'data-bind' => 'checkedWithInit: requestingAbsentee', autocomplete: ac
        = f.label :requesting_absentee do
          %strong= I18n.t('options.domestic.requesting_absentee')
      <!-- ko if: requestingAbsentee -->
      %p To apply to vote absentee, you must identify the election for which you are applying.
      <!-- /ko -->
  <!-- ko if: requestingAbsentee -->
  .row
    .span12
      %h4
        = f.label :rab_election do
          %strong I am applying to vote absentee in:
      - elections = (f.object.upcoming_elections || Dictionaries::ELECTIONS) + [ [ "Other", "other" ] ]
      = f.select :rab_election, elections, { include_blank: true }, { autocomplete: ac, class: 'span6', 'data-bind' => 'instantValidation: { accessor: "rabElection" }' }
  <!-- ko if: rabElection() == 'other' -->
  .row
    .span6.election-name-field
      = f.label :rab_election_name, "Election name"
      = f.text_field :rab_election_name, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "rabElectionName" }'
    .span3
      = f.label :registration_rab_election_date, "Held on"
      = f.text_field :rab_election_date, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "rabElectionDate" }', placeholder: 'MM/DD/YYYY'
  <!-- /ko -->
  <!-- /ko --> <!-- requestingAbsentee -->

<!-- ko if: requestingAbsentee -->
.partition
  .row
    .span12
      %p
        Select only one reason to vote absentee from the list below and include any<br/>
        required information to support the reason.
  .row
    .span12
      = f.label :ab_reason do
        %strong I am unable to go to the polls on election day because
      = f.select :ab_reason, Dictionaries::ABSENCE_REASONS.invert, { include_blank: true }, { autocomplete: ac, class: 'span10', 'data-bind' => 'instantValidation: { accessor: "abReason" }' }

  -# Fields to blank elements of the record that aren't on the form
  = hidden_field_tag "registration[ab_field_1]", '', id: nil
  = hidden_field_tag "registration[ab_field_2]", '', id: nil
  = hidden_field_tag "registration[ab_time_1(1i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_1(2i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_1(3i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_1(4i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_1(5i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_2(1i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_2(2i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_2(3i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_2(4i)]", '', id: nil
  = hidden_field_tag "registration[ab_time_2(5i)]", '', id: nil
  = hidden_field_tag "registration[ab_street_number]", '', id: nil
  = hidden_field_tag "registration[ab_street_name]", '', id: nil
  = hidden_field_tag "registration[ab_street_type]", '', id: nil
  = hidden_field_tag "registration[ab_apt]", '', id: nil
  = hidden_field_tag "registration[ab_city]", '', id: nil
  = hidden_field_tag "registration[ab_state]", '', id: nil
  = hidden_field_tag "registration[ab_zip5]", '', id: nil
  = hidden_field_tag "registration[ab_zip4]", '', id: nil
  = hidden_field_tag "registration[ab_country]", '', id: nil

  <!-- ko if: abField1Required || abField2Required -->
  .row
    .span3
      = f.label :ab_field_1, '', 'data-bind' => 'html: abField1Label'
      <!-- ko if: abPartyLookupRequired -->
      = f.select :ab_field_1, Dictionaries::PARTIES, { include_blank: true }, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abField1" }'
      <!-- /ko -->

      <!-- ko if: !abPartyLookupRequired() -->
      = f.text_field :ab_field_1, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abField1" }'
      <!-- /ko -->

    <!-- ko if: abTimeRangeRequired -->
    .span3
      %label{ for: 'registration_ab_time_1_4i_' } Time start
      = bound_time f, :ab_time_1
    .span3
      %label{ for: 'registration_ab_time_2_4i_' } Time end
      = bound_time f, :ab_time_2
    <!-- /ko --> <!-- time range -->

    <!-- ko if: abField2Required -->
    .span3
      = f.label :ab_field_2, '', 'data-bind' => 'html: abField2Label'
      = f.text_field :ab_field_2, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abField2" }'
    <!-- /ko -->
  <!-- /ko --> <!-- 1C -->

  <!-- ko if: abAddressRequired -->
  .row
    .span2
      = f.label :ab_street_number, "Street number"
      = f.text_field :ab_street_number, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abStreetNumber" }', class: 'span2'
    .span4
      = f.label :ab_street_name, "Street name"
      = f.text_field :ab_street_name, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abStreetName" }', class: 'span4'
    .span2.street-type-field
      = f.label :ab_street_type, "Street type"
      = f.select :ab_street_type, Dictionaries::STREET_TYPES, { include_blank: true }, { autocomplete: ac, class: 'street-type', 'data-bind' => 'instantValidation: { accessor: "abStreetType" }' }
    .span2.lot-field
      = f.label :ab_apt do
        Apt/Lot
        %label (optional)
      = f.text_field :ab_apt, autocomplete: ac, 'data-bind' => 'valueWithInit: abApt'
  .row
    .span3
      = f.label :ab_city, "City"
      = f.text_field :ab_city, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abCity" }'
    .span3
      = f.label :ab_state, "Province or State"
      = f.text_field :ab_state, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abState" }'
    .span3.postal-code-field
      = f.label :ab_zip5, "Postal code"
      = f.text_field :ab_zip5, maxlength: 5, autocomplete: ac, class: 'first-zip', 'data-bind' => 'instantValidation: { accessor: "abZip5" }', placeholder: 'NNNNN'
      .space &mdash;
      = f.text_field :ab_zip4, maxlength: 4, autocomplete: ac, class: 'second-zip', placeholder: 'NNNN', 'data-bind' => 'valueWithInit: abZip4'
    .span2.country-field
      = f.label :ab_country, "Country"
      = f.text_field :ab_country, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abCountry" }'
  <!-- /ko --> <!-- addressRequired -->
<!-- /ko -->
<!-- /ko --> <!-- domestic -->
