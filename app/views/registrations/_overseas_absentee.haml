<!-- ko if: overseas -->
.partition
  .row
    .span12
      .checkbox
        = f.check_box :requesting_absentee, autocomplete: ac, disabled: true
        = f.hidden_field :requesting_absentee, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "requestingAbsentee" }'
        %strong
          I will not be able to vote in person, and would like to vote absentee until #{ " #{f.object.absentee_until.strftime("%B %d, %Y")}" unless AppConfig['choose_absentee_until']}:

  <!-- ko if: requestingAbsentee -->
  - if AppConfig['choose_absentee_until']
    .row
      .span3
        = f.hidden_field :absentee_until
        #absentee_until.sliderbar
      .span3
        .absentee_until_label{ 'data-bind' => 'text: absenteeUntilFormatted' }
  - else
    = f.hidden_field :absentee_until

  .row
    .span12
      .radio
        = f.radio_button :outside_type, 'ActiveDutyMerchantMarineOrArmedForces', { 'data-bind' => 'checkedWithInit: outsideType' }
        %label{ for: 'registration_outside_type_activedutymerchantmarineorarmedforces' }= t 'outside_type.active_duty'
      .radio
        = f.radio_button :outside_type, 'SpouseOrDependentActiveDutyMerchantMarineOrArmedForces', { 'data-bind' => 'checkedWithInit: outsideType' }
        %label{ for: 'registration_outside_type_spouseordependentactivedutymerchantmarineorarmedforces' }= t 'outside_type.spouse_active_duty'
      .radio
        = f.radio_button :outside_type, 'TemporaryResideOutside', { 'data-bind' => 'checkedWithInit: outsideType' }
        %label{ for: 'registration_outside_type_temporaryresideoutside' }= t 'outside_type.temporarily'
      .radio
        = f.radio_button :outside_type, 'TemporaryResideOutsideSpouse', { 'data-bind' => 'checkedWithInit: outsideType' }
        %label{ for: 'registration_outside_type_temporaryresideoutsidespouse' }= t 'outside_type.spouse_temporarily'

  <!-- ko if: needsServiceDetails -->
  .row
    .span2
      %span Service Branch
      = select     :registration, :service_branch, options_for_select(Registration::SERVICE_BRANCHES), {}, autocomplete: ac, class: 'span2 inline'
    .span2
      %span Service ID
      = text_field :registration, :service_id, placeholder: 'Service ID', autocomplete: ac, class: 'span1 inline', 'data-bind' => 'valueWithInit: serviceId'
    .span2
      %span Rank / Grade / Rate
      = text_field :registration, :rank, placeholder: 'Rank / Grade / Rate', autocomplete: ac, class: 'span2 inline', 'data-bind' => 'valueWithInit: rank'
  <!-- /ko -->
  <!-- /ko -->
<!-- /ko -->
