.row
  .span12
    %p= raw t 'options.rab_reason.details'

.row
  .span12
    = f.label :ab_reason do
      %strong= t 'options.rab_reason.reason'
    = f.select :ab_reason, Dictionaries::ABSENCE_REASONS.invert, { include_blank: true }, { autocomplete: ac, class: 'span10', 'data-bind' => 'instantValidation: { accessor: "abReason" }' }

-# Fields to blank elements of the record that aren't on the form
= hidden_field_tag "registration[ab_field_1]", '', id: nil
= hidden_field_tag "registration[ab_field_2]", '', id: nil
= hidden_field_tag "registration[ab_time_1(1i)]", '', id: nil
= hidden_field_tag "registration[ab_time_1(2i)]", '', id: nil
= hidden_field_tag "registration[ab_time_1(3i)]", '', id: nil
= hidden_field_tag "registration[ab_time_1(4i)]", '', id: nil
= hidden_field_tag "registration[ab_time_1(5i)]", '', id: nil
= hidden_field_tag "registration[ab_time_2(1i)]", '', id: nil
= hidden_field_tag "registration[ab_time_2(2i)]", '', id: nil
= hidden_field_tag "registration[ab_time_2(3i)]", '', id: nil
= hidden_field_tag "registration[ab_time_2(4i)]", '', id: nil
= hidden_field_tag "registration[ab_time_2(5i)]", '', id: nil
= hidden_field_tag "registration[ab_street_number]", '', id: nil
= hidden_field_tag "registration[ab_street_name]", '', id: nil
= hidden_field_tag "registration[ab_street_type]", '', id: nil
= hidden_field_tag "registration[ab_apt]", '', id: nil
= hidden_field_tag "registration[ab_city]", '', id: nil
= hidden_field_tag "registration[ab_state]", '', id: nil
= hidden_field_tag "registration[ab_zip5]", '', id: nil
= hidden_field_tag "registration[ab_zip4]", '', id: nil
= hidden_field_tag "registration[ab_country]", '', id: nil

<!-- ko if: abField1Required || abField2Required -->
.row
  .span3
    = f.label :ab_field_1, '', 'data-bind' => 'html: abField1Label'
    <!-- ko if: abPartyLookupRequired -->
    = f.select :ab_field_1, Dictionaries::PARTIES, { include_blank: true }, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abField1" }'
    <!-- /ko -->

    <!-- ko if: !abPartyLookupRequired() -->
    = f.text_field :ab_field_1, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abField1" }, valueUpdate: "afterkeyup"'
    <!-- /ko -->

  <!-- ko if: abTimeRangeRequired -->
  .span3
    %label{ for: 'registration_ab_time_1_4i_' }= t 'options.rab_reason.time_start'
    = bound_time f, :ab_time_1
  .span3
    %label{ for: 'registration_ab_time_2_4i_' }= t 'options.rab_reason.time_end'
    = bound_time f, :ab_time_2
  <!-- /ko --> <!-- time range -->

  <!-- ko if: abField2Required -->
  .span3
    = f.label :ab_field_2, '', 'data-bind' => 'html: abField2Label'
    = f.text_field :ab_field_2, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abField2" }, valueUpdate: "afterkeyup"'
  <!-- /ko -->
<!-- /ko --> <!-- 1C -->

<!-- ko if: abAddressRequired -->
.row
  .span2
    = f.label :ab_street_number, t('options.rab_reason.street_number')
    = f.text_field :ab_street_number, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abStreetNumber" }, valueUpdate: "afterkeyup"', class: 'span2'
  .span4
    = f.label :ab_street_name, t('options.rab_reason.street_name')
    = f.text_field :ab_street_name, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abStreetName" }, valueUpdate: "afterkeyup"', class: 'span4'
  .span2.street-type-field
    = f.label :ab_street_type, t('options.rab_reason.street_type')
    = f.select :ab_street_type, Dictionaries::STREET_TYPES, { include_blank: true }, { autocomplete: ac, class: 'street-type', 'data-bind' => 'instantValidation: { accessor: "abStreetType" }' }
  .span2.lot-field
    = f.label :ab_apt do
      = t 'options.rab_reason.apt'
      %label= t 'optional'
    = f.text_field :ab_apt, autocomplete: ac, 'data-bind' => 'valueWithInit: abApt'
.row
  .span3
    = f.label :ab_city, t('options.rab_reason.city')
    = f.text_field :ab_city, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abCity" }, valueUpdate: "afterkeyup"'
  .span3
    = f.label :ab_state, t('options.rab_reason.state')
    = f.text_field :ab_state, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abState" }, valueUpdate: "afterkeyup"'
  .span3.postal-code-field
    %table
      %tr
        %td= f.label :ab_zip5, t('options.rab_reason.zip5')
        %td &nbsp;
        %td
          = f.label :ab_zip4 do
            = t 'options.rab_reason.zip4'
            %span= t 'optional'
      %tr
        %td= f.text_field :ab_zip5, maxlength: 5, autocomplete: ac, class: 'first-zip', 'data-bind' => 'instantValidation: { accessor: "abZip5" }, valueUpdate: "afterkeyup"', placeholder: 'NNNNN'
        %td.space &mdash;
        %td= f.text_field :ab_zip4, maxlength: 4, autocomplete: ac, class: 'second-zip', placeholder: 'NNNN', 'data-bind' => 'valueWithInit: abZip4, valueUpdate: "afterkeyup"'
  .span2.country-field
    = f.label :ab_country, t('options.rab_reason.country')
    = f.text_field :ab_country, autocomplete: ac, 'data-bind' => 'instantValidation: { accessor: "abCountry" }, valueUpdate: "afterkeyup"'
<!-- /ko --> <!-- addressRequired -->
